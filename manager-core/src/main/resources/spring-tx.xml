<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
		
	<!-- 
	不用简单的jdbcTemplate操作数据库，使用mybatis
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean> -->
	
	
	<!-- 2、配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="username" value="${druid.username}"></property>
		<property name="password" value="${druid.password}"></property>
		<property name="url" value="${druid.url}"></property>
		<property name="driverClassName" value="${druid.driverclass}"></property>
	</bean>
	
	<!-- 3、配置事务；spring利用aop来做的事务控制，事务切面[事务管理器](PlatformTransactionManager)  -->
	<!-- 3.1：配置事务管理器-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 3.2:开启基于注解的事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
